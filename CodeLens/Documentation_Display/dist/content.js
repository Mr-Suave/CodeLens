!function(){let e=null,t=null,n=null,o=null,r=!1,i=null,l=null;const d={"Novice Developer":"Documentation_novice.md",Client:"Documentation_client.md","Senior Developer":"Documentation_senior.md"};function c(){/^https:\/\/github\.com\/[^\/]+\/[^\/]+$/.test(window.location.href)?e||(e=document.createElement("div"),e.id="codelens-main-button",e.innerText="CodeLens",e.addEventListener("click",a),document.body.appendChild(e)):y()}function a(){if(t)return t.remove(),void(t=null);t=document.createElement("div"),t.id="overlay-options-menu";const e=document.createElement("button");e.innerText="Expand",e.addEventListener("click",s);const n=document.createElement("button");n.innerText="Vanish",n.classList.add("vanish"),n.addEventListener("click",y),t.appendChild(e),t.appendChild(n),document.body.appendChild(t)}function s(){if(n||o)return;for(o=document.createElement("div"),o.id="github-pane",o.style.width="50%",o.style.float="left",o.style.overflowY="auto",o.style.height="100vh";document.body.firstChild;)o.appendChild(document.body.firstChild);document.body.appendChild(o),n=document.createElement("div"),n.id="codelens-overlay",n.style.width="50%",n.style.float="right",n.style.height="100vh",n.style.overflowY="auto",n.style.padding="20px",n.style.boxSizing="border-box";const e=chrome.runtime.getURL("images/basic.jpg");n.style.background=`\n        url(${e}) no-repeat center center / cover,\n        linear-gradient(rgba(255,255,255,0.8), rgba(255,255,255,0.8))\n      `;const t=document.createElement("h2");t.innerText="Whom do you want to generate the document for?",n.appendChild(t);const l=document.createElement("div");l.className="radio-group";let c=null;["Novice Developer","Client","Senior Developer"].forEach((e=>{const t=document.createElement("button");t.className="choice-button",t.innerText=e,t.addEventListener("click",(()=>{l.querySelectorAll("button").forEach((e=>e.classList.remove("selected"))),t.classList.add("selected"),c=e,a.style.display="block"})),l.appendChild(t)})),n.appendChild(l);const a=document.createElement("button");a.className="display-button",a.innerText="Find Documentation",a.style.display="none",a.addEventListener("click",(()=>{if(!c)return;const e=d[c],t=n.querySelector(".markdown-content");t&&t.remove(),function(e,t){const n=document.createElement("div");n.id="searching-indicator",n.className="loading-indicator",n.innerHTML=`\n        <div class="spinner"></div>\n        <p>Searching repository for ${t}...</p>\n      `,e.appendChild(n)}(n,e),function(e){const t=function(){const e=window.location.pathname.split("/");return e.length>=3?{owner:e[1],repo:e[2]}:null}();var o,l;t?(o=t.owner,l=t.repo,fetch(`https://api.github.com/repos/${o}/${l}`).then((e=>{if(!e.ok)throw new Error(`Failed to fetch repository info: ${e.status}`);return e.json()})).then((e=>e.default_branch||"master"))).then((n=>u(t.owner,t.repo,n,"",e))).then((t=>{if(t)return n=t.download_url,fetch(n).then((e=>{if(!e.ok)throw new Error(`Failed to fetch file content: ${e.status}`);return e.text()})).then((e=>({content:e,path:n.split("/").slice(-2).join("/")})));throw new Error(`Documentation file ${e} not found in the repository.`);var n})).then((e=>{const t=document.getElementById("searching-indicator");t&&t.remove(),i=e.content,function(e,t,n){const o=document.createElement("div");o.className="markdown-content";const l=document.createElement("div");l.className="path-info",l.innerHTML=`<p><strong>Source:</strong> ${n}</p>`,o.appendChild(l);const d=document.createElement("div");d.className="markdown-body",d.id="markdown-view";const c=document.createElement("div");c.className="markdown-editor-container",c.id="markdown-editor-container",c.style.display="none";const a=document.createElement("div");a.className="markdown-editor",a.id="markdown-editor";const s=document.createElement("textarea");s.id="markdown-textarea",s.value=t,s.spellcheck=!1,s.addEventListener("input",(function(){document.getElementById("markdown-preview")&&function(e){const t=document.getElementById("markdown-preview");t&&p(t,e)}(s.value)})),a.appendChild(s),c.appendChild(a);const m=document.createElement("div");m.className="markdown-preview",m.id="markdown-preview",m.style.display="none",c.appendChild(m),p(d,t);const u=document.createElement("div");u.className="file-action-buttons";const f=document.createElement("button");f.className="file-button edit-button",f.innerText="Edit",f.addEventListener("click",(()=>{!function(e,t,n){if(r){const o=document.getElementById("markdown-textarea");i=o.value,p(e,i),e.style.display="block",t.style.display="none",n.innerText="Edit";const r=document.querySelector(".split-view-button");r&&(r.style.display="none")}else{document.getElementById("markdown-textarea").value=i,e.style.display="none",t.style.display="block",n.innerText="Preview";const o=document.querySelector(".split-view-button");o&&(o.style.display="inline-block"),document.getElementById("markdown-textarea").focus()}r=!r}(d,c,f)}));const y=document.createElement("button");y.className="file-button split-view-button",y.innerText="Split View",y.style.display="none",y.addEventListener("click",(()=>{!function(e,t,n,o){"none"===t.style.display?(t.style.display="block",e.classList.add("split-mode"),t.classList.add("split-mode"),o.innerText="Editor Only",p(t,n)):(t.style.display="none",e.classList.remove("split-mode"),t.classList.remove("split-mode"),o.innerText="Split View")}(a,m,s.value,y)}));const v=document.createElement("button");v.className="file-button save-button",v.innerText="Save",v.addEventListener("click",(()=>{!function(e){chrome.runtime.sendMessage({action:"saveFileWithDialog",content:e,filename:"documentation.md"},(e=>{e&&e.success?h("File was saved successfully!","success"):e&&e.error&&h(`Error saving file: ${e.error}`,"error")}))}(r?document.getElementById("markdown-textarea").value:i)})),u.appendChild(f),u.appendChild(y),u.appendChild(v),o.appendChild(d),o.appendChild(c),o.appendChild(u),e.appendChild(o)}(n,e.content,e.path)})).catch((e=>{const t=document.getElementById("searching-indicator");t&&t.remove(),f(n,e.message)})):f(n,"Could not determine repository information.")}(e)})),n.appendChild(a);const s=document.createElement("button");s.id="close-overlay-btn",s.innerText="Close",s.style.position="absolute",s.style.top="10px",s.style.right="10px",s.addEventListener("click",y),n.appendChild(s),document.body.appendChild(n),m()}function m(){l||chrome.runtime.sendMessage({action:"getMarkedParser"},(function(e){if(e&&e.success)try{l=new Function("markdown",`return (${e.markedFunction})(markdown);`),document.querySelectorAll(".raw-markdown").forEach((e=>{p(e.parentNode,e.textContent)}))}catch(e){console.error("Error initializing marked parser:",e)}}))}function u(e,t,n,o,r){return fetch(`https://api.github.com/repos/${e}/${t}/contents/${o}?ref=${n}`).then((e=>{if(!e.ok)throw new Error(`Failed to fetch directory contents: ${e.status}`);return e.json()})).then((i=>{const l=i.find((e=>"file"===e.type&&e.name.toLowerCase()===r.toLowerCase()));if(l)return l;const d=i.filter((e=>"dir"===e.type)).map((i=>{const l=o?`${o}/${i.name}`:i.name;return u(e,t,n,l,r)}));return Promise.all(d).then((e=>e.find((e=>null!==e))||null))}))}function p(e,t){if(l)try{e.innerHTML=l(t),"undefined"!=typeof hljs&&e.querySelectorAll("pre code").forEach((e=>{hljs.highlightBlock(e)}))}catch(t){console.error("Error rendering markdown:",t),e.innerHTML=`<p class="error">Error rendering markdown: ${t.message}</p>`}else{const n=document.createElement("pre");n.className="raw-markdown",n.textContent=t,e.innerHTML="",e.appendChild(n),m()}}function h(e,t){const n=document.createElement("div");n.className="error"===t?"error-message":"success-message",n.innerText=e,document.querySelector(".file-action-buttons").appendChild(n),setTimeout((()=>{n.remove()}),"error"===t?5e3:3e3)}function f(e,t){const n=document.createElement("div");n.className="markdown-content error",n.innerHTML=`<p class="error-message">${t}</p>`,e.appendChild(n)}function y(){if(n&&(n.remove(),n=null),o){for(;o.firstChild;)document.body.appendChild(o.firstChild);o.remove(),o=null}t&&(t.remove(),t=null),e&&(e.remove(),e=null),r=!1,i=null}let v=location.href;new MutationObserver((()=>{location.href!==v&&(v=location.href,y(),c())})).observe(document,{subtree:!0,childList:!0}),c()}();